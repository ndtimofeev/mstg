mulIntB = \n {a,b} ->
	case a of {
		I {a#} -> case b of {
			I {b#} -> case(mulInt## {a#,b#})of {
				c# -> I {c#};
			};
		};
	};

subIntB = \n {a,b} ->
	case a of {
		I {a#} -> case b of {
			I {b#} -> case(subInt## {a#,b#})of {
				c# -> I {c#};
			};
		};
	};

addIntB = \n {a,b} ->
	case a of {
		I {a#} -> case b of {
			I {b#} -> case (addInt## {a#,b#})of {
				c#-> I {c#};
			};
		};
	};

eqIntB = \n {a,b} ->
	case a of {
		I {a#} -> case b of {
			I {b#} -> case ( subInt## {a#,b#} ) of {
				0# -> True {};
				_  -> False {};
			};
		};
	};

